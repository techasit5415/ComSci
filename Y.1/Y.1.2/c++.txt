#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <stdbool.h>

#define ARRAY_stock 100
#define ARRAY_product 100

typedef struct product {
    char name[20]; 
    float price;
    int quantity;
  int keepq;
} product;

static product global_product;

typedef struct stock {
    float pen;
    float pencil;
    float eraser;
    float ruler;
    float notebook;
    float in_stock[ARRAY_stock];
    product products[ARRAY_product];
} stock;

int add_product(stock *s,int checkscan[5]) {
    char check[20];
    static int point = 0;
  
  

    printf("Enter the name of the product: ");
    scanf("%s", check);

    if (strcmp(check, "pen") == 0) {
        point = 0;
      
    } else if (strcmp(check, "pencil") == 0) {
        point = 1;
      
    } else if (strcmp(check, "eraser") == 0) {
        point = 2;
      
    } else if (strcmp(check, "ruler") == 0) {
        point = 3;
      
    } else if (strcmp(check, "notebook") == 0) {
        point = 4;
      
    } else {
        printf("Invalid product name.\n");
      
        exit(1);
    }
  checkscan[point]+=1; 
  // printf("%d\n",point); //show choice
  // printf("%d\n",checkscan[point]); //show count
  
    strcpy(s->products[point].name, check);
if(checkscan[point]<2){
    printf("Enter the price of the product: ");
    scanf("%f", &s->products[point].price);
}
    printf("Enter the quantity of the product: ");
    scanf("%d", &s->products[point].keepq);
  
  return point;
}

void calculate_product(stock *s,int point){
  
  s->products[point].quantity += s->products[point].keepq;
}

int main(void) {
  char bool_check[20];
  int point = 0;
    static stock s;
  int checkscan[5]={0};

  while (1) {
      point = add_product(&s,checkscan);
    calculate_product(&s, point);
   
      printf("want to exit type 'exit' if u dont want type 'no' :");
      scanf("%s", bool_check); 
    printf("\n");
      if (strcmp(bool_check, "exit") == 0) { 
          break;
        
      }
  }
    for  (int i = 0; i<5 ;i++) {
    printf("Name: %s\n", s.products[i].name);
    printf("Price: %.2f\n", s.products[i].price);
    printf("Quantity: %d\n\n", s.products[i].quantity);
    }
    return 0;
}